ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0040,len:652
ho 0 tail 12 room 4
load:0x40078000,len:17176
ho 0 tail 12 room 4
load:0x40080400,len:3924
entry 0x4008069c
[0;32mI (31) boot: ESP-IDF v6.0-dev-937-gfc685e12b94-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Jul  8 2025 15:01:29[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (31) boot: chip revision: v3.0[0m
[0;32mI (31) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (33) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (35) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (37) boot: Enabling RNG early entropy source...[0m
[0;32mI (38) boot: Partition Table:[0m
[0;32mI (40) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (41) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (45) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (49) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (54) boot: End of partition table[0m
[0;32mI (55) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=03020h ( 12320) map[0m
[0;32mI (63) esp_image: segment 1: paddr=00013048 vaddr=3ff80000 size=00024h (    36) load[0m
[0;32mI (63) esp_image: segment 2: paddr=00013074 vaddr=3ffb0000 size=01930h (  6448) load[0m
[0;32mI (68) esp_image: segment 3: paddr=000149ac vaddr=40080000 size=0b66ch ( 46700) load[0m
[0;32mI (88) esp_image: segment 4: paddr=00020020 vaddr=400d0020 size=0bc68h ( 48232) map[0m
[0;32mI (105) esp_image: segment 5: paddr=0002bc90 vaddr=4008b66c size=01878h (  6264) load[0m
[0;32mI (114) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (114) boot: Disabling RNG early entropy source...[0m
[0;32mI (118) cpu_start: Multicore app[0m
[0;32mI (126) cpu_start: Pro cpu start user code[0m
[0;32mI (126) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (126) app_init: Application information:[0m
[0;32mI (126) app_init: Project name:     log[0m
[0;32mI (126) app_init: App version:      v6.0-dev-937-gfc685e12b94-dirty[0m
[0;32mI (126) app_init: Compile time:     Jul  8 2025 15:01:16[0m
[0;32mI (127) app_init: ELF file SHA256:  ad8cfdd30...[0m
[0;32mI (127) app_init: ESP-IDF:          v6.0-dev-937-gfc685e12b94-dirty[0m
[0;32mI (129) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (131) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (134) efuse_init: Chip rev:         v3.0[0m
[0;32mI (136) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (137) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (140) heap_init: At 3FFB2088 len 0002DF78 (183 KiB): DRAM[0m
[0;32mI (143) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (146) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (148) heap_init: At 4008CEE4 len 0001311C (76 KiB): IRAM[0m
[0;32mI (152) spi_flash: detected chip: generic[0m
[0;32mI (154) spi_flash: flash io: dio[0m
[0;33mW (156) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;32mI (159) main_task: Started on CPU0[0m
[0;32mI (169) main_task: Calling app_main()[0m
[0;32mI (169) example: Start[0m
[0;32mI (169) example: char_var A 0x41[0m
[0;32mI (169) example: var8 240 -120[0m
[0;32mI (169) example: var16 65303 -16954 0xff17[0m
[0;32mI (169) example: const int var -1024[0m
[0;32mI (169) example: const long long unsigned var 2095[0m
[0;32mI (169) example: int_var 4095 -4095[0m
[0;32mI (169) example: var32 9000 -2000[0m
[0;32mI (179) example: var64 10700 -29468[0m
[0;32mI (179) example: 64 32 64 vars 10700 9000 10800[0m
[0;32mI (179) example: var_size 96843 4[0m
[0;32mI (179) example: float var 1.600000[0m
[0;32mI (189) example: double var -70.199997[0m
[0;32mI (189) example: int, double, var32, float, float, char 4095 -70.199997 9000 1.600000 1.600000 A[0m
[0;32mI (189) example: str_array 0x3ffb3200[0m
[0;32mI (199) example: str_ptr 0x3f400a44[0m
[0;32mI (199) example: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f[0m
[0;32mI (199) example: 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f[0m
[0;32mI (199) example: 20 21 21 21 21 21 21 21 21 21 21 21 21 21 21 21[0m
[0;32mI (199) example: 30 31 32 33 34 35 36 37 38 39 30 31 32 33 34 35[0m
[0;32mI (199) example: 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f[0m
[0;32mI (199) example: 50 51 52 53 54 55 56 57 58 59[0m
[0;32mI (209) example: buffer addr = 0x3ffb320a[0m
[0;32mI (209) example: 0x3ffb320a   00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  |................|[0m
[0;32mI (209) example: 0x3ffb321a   10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f  |................|[0m
[0;32mI (209) example: 0x3ffb322a   20 21 21 21 21 21 21 21  21 21 21 21 21 21 21 21  | !!!!!!!!!!!!!!!|[0m
[0;32mI (209) example: 0x3ffb323a   30 31 32 33 34 35 36 37  38 39 30 31 32 33 34 35  |0123456789012345|[0m
[0;32mI (209) example: 0x3ffb324a   40 41 42 43 44 45 46 47  48 49 4a 4b 4c 4d 4e 4f  |@ABCDEFGHIJKLMNO|[0m
[0;32mI (209) example: 0x3ffb325a   50 51 52 53 54 55 56 57  58 59                    |PQRSTUVWXY|[0m
[0;32mI (219) example: Text1:The way to[0m
[0;32mI (219) example:  get started is [0m
[0;32mI (219) example: to quit talking [0m
[0;32mI (219) example: and begin doing.[0m
[0;32mI (219) example:  - Walt Disney[0m
[0;32mI (229) example: Text2:The way to[0m
[0;32mI (229) example:  get started is [0m
[0;32mI (229) example: to quit talking [0m
[0;32mI (229) example: and begin doing.[0m
[0;32mI (229) example:  - Walt Disney[0m
[0;32mI (229) example: buffer2 addr = 0x3ffb32b4[0m
[0;32mI (229) example: 0x3ffb32b4   00 00 00 00 01 00 00 00  02 00 00 00 03 00 00 00  |................|[0m
[0;32mI (229) example: 0x3ffb32c4   04 00 00 00 05 00 00 00  06 00 00 00 07 00 00 00  |................|[0m
[0;32mI (229) example: 0x3ffb32d4   08 00 00 00 09 00 00 00  0a 00 00 00 0b 00 00 00  |................|[0m
[0;32mI (229) example: 0x3ffb32e4   0c 00 00 00 0d 00 00 00  0e 00 00 00 0f 00 00 00  |................|[0m
[0;32mI (229) example: 0x3ffb32f4   10 00 00 00 11 00 00 00  12 00 00 00 13 00 00 00  |................|[0m
[0;32mI (239) example: buffer3 addr = 0x3ffb3308[0m
[0;32mI (249) example: 0x3ffb3308   00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00  |................|[0m
[0;32mI (249) example: 0x3ffb3318   02 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  |................|[0m
[0;32mI (249) example: 0x3ffb3328   04 00 00 00 00 00 00 00  05 00 00 00 00 00 00 00  |................|[0m
[0;32mI (249) example: 0x3ffb3338   06 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00  |................|[0m
[0;32mI (249) example: 0x3ffb3348   08 00 00 00 00 00 00 00  09 00 00 00 00 00 00 00  |................|[0m
[0;32mI (249) example: 0x3ffb3358   0a 00 00 00 00 00 00 00                           |........|[0m
[0;32mI (259) example: >>> String Formatting Tests <<<[0m
[0;32mI (259) example: |Hello_world|[0m
[0;32mI (259) example: |     ESP32|[0m
[0;32mI (259) example: |ESP32     |[0m
[0;32mI (259) example: |Hello|[0m
[0;32mI (259) example: >>> Character Formatting Tests <<<[0m
[0;32mI (269) example: |A|[0m
[0;32mI (269) example: >>> Integer Formatting Tests <<<[0m
[0;32mI (269) example: |123|[0m
[0;32mI (269) example: |   42|[0m
[0;32mI (269) example: |00042|[0m
[0;32mI (269) example: |42   |[0m
[0;32mI (279) example: |00042|[0m
[0;32mI (279) example: |+42|[0m
[0;32mI (279) example: | 42|[0m
[0;32mI (279) example: |123456789|[0m
[0;32mI (279) example: |1234567890123456789|[0m
[0;32mI (279) example: |       +42|[0m
[0;32mI (289) example: |        42|[0m
[0;32mI (289) example: |+42       |[0m
[0;32mI (289) example: | 42       |[0m
[0;32mI (289) example: >>> Pointer Formatting Tests <<<[0m
[0;32mI (289) example: |0x3ff26523|[0m
[0;32mI (289) example: >>> Hexadecimal Formatting Tests <<<[0m
[0;32mI (299) example: |ff|[0m
[0;32mI (299) example: |FF|[0m
[0;32mI (299) example: |000ff|[0m
[0;32mI (299) example: |000ff|[0m
[0;32mI (299) example: |ff   |[0m
[0;32mI (299) example: |ffff|[0m
[0;32mI (309) example: |ff|[0m
[0;32mI (309) example: |0x2a|[0m
[0;32mI (309) example: |0XFF|[0m
[0;32mI (309) example: |      0x2a|[0m
[0;32mI (309) example: |0x2a      |[0m
[0;32mI (309) example: >>> Octal Formatting Tests <<<[0m
[0;32mI (319) example: |10|[0m
[0;32mI (319) example: |010|[0m
[0;32mI (319) example: |777|[0m
[0;32mI (319) example: |0777|[0m
[0;32mI (319) example: |       052|[0m
[0;32mI (319) example: |052       |[0m
[0;32mI (329) example: >>> Float Formatting Tests <<<[0m
[0;32mI (329) example: |123.456000|[0m
[0;32mI (329) example: |123.46|[0m
[0;32mI (329) example: |-123.46|[0m
[0;32mI (329) example: |      3.14|[0m
[0;32mI (339) example: |3.14      |[0m
[0;32mI (339) example: |-123.456789|[0m
[0;32mI (339) example: |-123.456789|[0m
[0;32mI (339) example: >>> Scientific Float Formatting Tests <<<[0m
[0;32mI (339) example: |123456.789000|[0m
[0;32mI (349) example: |1.234568e+05|[0m
[0;32mI (349) example: |1.234568E+05|[0m
[0;32mI (349) example: |123457|[0m
[0;32mI (349) example: |123457|[0m
[0;32mI (349) example: >>> Literal Percent Sign Tests <<<[0m
[0;32mI (359) example: |%|[0m
[0;32mI (359) example: |%| |Hello_world|[0m
[0;32mI (359) example: } |Hello_world|[0m
[0;32mI (359) example: >>> Multiple Variables in One Log <<<[0m
[0;32mI (359) example: string width |     ESP32| |ESP32     | |ESP32|[0m
[0;32mI (359) example: shorts |ffff| |ff|[0m
[0;32mI (369) example:   flag | 42| |-42|[0m
[0;32mI (369) example: + flag |+42| |-42|[0m
[0;32mI (369) example: # flag long |0x499602d2| |011145401322|[0m
[0;32mI (369) example: longs |1234567890| |123456789012345|[0m
[0;32mI (379) example: float width |      3.14| |3.14      | |3.1416|[0m
[0;32mI (379) example: double width |-123.456789| |-123.456789| |-123.46|[0m
[0;32mI (379) example: Success[0m
[1;31mE (389) assert: Assert failed in 0x400d3bcf, /IDF/tools/test_apps/system/log/main/main.c:185 (false && "This is an error message")[0m

